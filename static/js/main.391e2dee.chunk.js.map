{"version":3,"sources":["components/TipForm.js","App.js","reportWebVitals.js","index.js"],"names":["TipForm","props","tipAmount","quality","state","billAmount","serviceQuality","tipPercent","totalAmount","isCalculated","handleChange","bind","handleSubmit","handleReset","event","name","target","value","parseFloat","this","setState","preventDefault","Container","Form","onSubmit","Group","controlId","Label","Control","type","onChange","placeholder","className","htmlFor","as","id","custom","toFixed","Button","variant","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.391e2dee.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Container, Form, Button} from 'react-bootstrap';\n\nexport default class TipForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            billAmount: '',\n            serviceQuality: '',\n            tipPercent: '',\n            tipAmount: '',\n            totalAmount: '',\n            isCalculated: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    tipAmount = (quality) => {\n        if (quality === 'Great') {\n            return 0.25;\n        } else if (quality === 'Good') {\n            return 0.15;\n        } else if (quality === 'Okay') {\n            return 0.10;\n        } else if (quality === 'Bad') {\n            return 0.05;\n        } else {\n            return 0;\n        }\n    }\n\n  handleChange(event) {\n      const name = event.target.name;\n      const value = name === 'billAmount' ? parseFloat(event.target.value) : event.target.value;\n\n      if (this.state.billAmount !== value && name === 'billAmount' && this.state.serviceQuality) {\n        const tipPercent = this.tipAmount(this.state.serviceQuality);\n        const billAmount = value;\n        const tipAmount = (tipPercent * billAmount);\n        const totalAmount = tipAmount + billAmount;\n        this.setState({tipAmount: tipAmount, tipPercent: tipPercent, totalAmount: totalAmount});\n      } else if (this.state.serviceQuality !== value && name === 'serviceQuality' && this.state.billAmount) {\n        const tipPercent = this.tipAmount(value);\n        const billAmount = this.state.billAmount;\n        const tipAmount = tipPercent * billAmount;\n        const totalAmount = tipAmount + billAmount;\n     \n        this.setState({tipAmount: tipAmount, tipPercent: tipPercent, totalAmount: totalAmount});\n      } \n\n      this.setState({[name]: value});\n\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n      const tipPercent = this.tipAmount(this.state.serviceQuality);\n      const billAmount = this.state.billAmount;\n      const tipAmount = tipPercent * billAmount;\n      const totalAmount = tipAmount + billAmount;\n     this.setState({tipAmount: tipAmount, tipPercent: tipPercent, totalAmount: totalAmount, isCalculated: true});\n  }\n\n  handleReset() {\n      this.setState(\n             {\n            billAmount: '',\n            serviceQuality: '',\n            tipPercent: '',\n            tipAmount: '',\n            totalAmount: '',\n            isCalculated: false\n        }\n      )\n  }\n\n    render() {\n        return (\n        <Container>\n            <h1>Tip Calculator</h1>\n            <Form onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"formGroupEmail\">\n                <Form.Label>Bill Amount</Form.Label>\n                <Form.Control type=\"text\" name='billAmount' value={this.state.billAmount} onChange={this.handleChange} placeholder=\"Enter bill amount\" />\n            </Form.Group>\n            <Form.Label className=\"my-1 mr-2\" htmlFor=\"inlineFormCustomSelectPref\">\n            How was the service?\n            </Form.Label>\n            <Form.Control\n                as=\"select\"\n                className=\"my-1 mr-sm-2\"\n                id=\"inlineFormCustomSelectPref\"\n                custom\n                name='serviceQuality'\n                value={this.state.serviceQuality}\n                onChange={this.handleChange}\n            >\n                <option value=\"0\">Choose...</option>\n                <option value=\"Great\">Great - 25%</option>\n                <option value=\"Good\">Good - 15%</option>\n                <option value=\"Okay\">Okay - 10%</option>\n                <option value=\"Okay\">Bad - 5%</option>\n                <option value=\"Horrible\">Horrible - 0%</option>\n            </Form.Control>\n            <Container>\n            {\n                this.state.isCalculated && this.state.billAmount && this.state.serviceQuality &&\n                (<div>\n                  <p>Bill Amount: ${this.state.billAmount.toFixed(2)}</p>\n                   <p>Tip Percent: {this.state.tipPercent * 100}%</p>\n                  <p>Tip Amount: ${this.state.tipAmount.toFixed(2)}</p>\n                  <p>Your total bill amount is: ${this.state.totalAmount.toFixed(2)}.</p>\n                </div>)\n            }\n            </Container>\n            <Button variant=\"primary\" type=\"submit\">\n            Submit\n            </Button>\n            <Button className=\"mx-1\" variant=\"secondary\" type=\"submit\" onClick={this.handleReset}>\n            Reset\n            </Button>\n            </Form>\n        </Container>\n        )\n    }\n}\n\n","import './App.css';\nimport React from 'react';\n\n//import components\nimport TipForm from './components/TipForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TipForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}